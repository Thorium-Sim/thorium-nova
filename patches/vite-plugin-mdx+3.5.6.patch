diff --git a/node_modules/vite-plugin-mdx/dist/transform.js b/node_modules/vite-plugin-mdx/dist/transform.js
index 9ba9617..bae1673 100644
--- a/node_modules/vite-plugin-mdx/dist/transform.js
+++ b/node_modules/vite-plugin-mdx/dist/transform.js
@@ -12,6 +12,7 @@ Object.defineProperty(exports, "__esModule", { value: true });
 exports.createTransformer = exports.stopService = void 0;
 const esbuild_1 = require("esbuild");
 const imports_1 = require("./imports");
+const graymatter = require('gray-matter');
 function createTransformer(root, namedImports = imports_1.inferNamedImports(root)) {
     const mdx = imports_1.requireMdx(root);
     const imports = Object.entries(namedImports).map(([packageName, imported]) => {
@@ -23,8 +24,10 @@ function createTransformer(root, namedImports = imports_1.inferNamedImports(root
     return function transform(code_mdx, mdxOptions) {
         return __awaiter(this, void 0, void 0, function* () {
             const code_jsx = yield mdx(code_mdx, mdxOptions);
+            const {data:frontmatter, content} = graymatter(code_mdx);
             const code_es2019 = yield jsxToES2019(code_jsx);
-            return imports.concat('', code_es2019).join('\n');
+            const extraExports = `export const frontmatter = ${JSON.stringify(frontmatter, null, 2)};\nexport const content = \`${content.replace(/`/g,'\\`')}\``
+            return imports.concat('', code_es2019, extraExports).join('\n');
         });
     };
 }
@@ -48,6 +51,7 @@ function jsxToES2019(code_jsx) {
         });
         // TODO stabilize this bugfix
         code_es2019 = code_es2019.replace('export default function MDXContent', 'export default MDXContent; function MDXContent');
+        
         return code_es2019;
     });
 }
